{"version":3,"sources":["../../../src/server/_helpers/jwt.js"],"names":["expressJwt","require","userService","module","exports","jwt","secret","isRevoked","expiresIn","unless","path","req","payload","done","user","getById","sub"],"mappings":"AAAA;;AACA;AACA,MAAMA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B,C,CACA;;;AACA,MAAMC,WAAW,GAAGD,OAAO,CAAC,uBAAD,CAA3B;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,GAAjB;;AACA,SAASA,GAAT,GAAe;AACX,QAAMC,MAAM,GACR,mGADJ;AAEA,SAAON,UAAU,CAAC;AAACM,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,EAAsB;AAACC,IAAAA,SAAS,EAAE;AAAZ,GAAtB,CAAV,CAAmDC,MAAnD,CAA0D;AAC7DC,IAAAA,IAAI,EAAE,CACF;AACA,yBAFE,EAGF,iBAHE,EAIF,QAJE,EAKF,GALE;AADuD,GAA1D,CAAP;AASH;;AAED,eAAeH,SAAf,CAAyBI,GAAzB,EAA8BC,OAA9B,EAAuCC,IAAvC,EAA6C;AACzC,QAAMC,IAAI,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CAAoBH,OAAO,CAACI,GAA5B,CAAnB,CADyC,CAGzC;;AACA,MAAI,CAACF,IAAL,EAAW;AACP,WAAOD,IAAI,CAAC,IAAD,EAAO,IAAP,CAAX;AACH;;AAEDA,EAAAA,IAAI;AACP","sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable no-use-before-define */\nconst expressJwt = require(\"express-jwt\");\n//const config = require(\"./config.json\");\nconst userService = require(\"../users/user.service\");\n\nmodule.exports = jwt;\nfunction jwt() {\n    const secret =\n        \"THIS IS USED TO SIGN AND VERIFY JWT TOKENS, REPLACE IT WITH YOUR OWN SECRET, IT CAN BE ANY STRING\";\n    return expressJwt({secret, isRevoked}, {expiresIn: \"60\"}).unless({\n        path: [\n            // public routes that don\"t require authentication\n            \"/users/authenticate\",\n            \"/users/register\",\n            \"/hello\",\n            \"/\",\n        ],\n    });\n}\n\nasync function isRevoked(req, payload, done) {\n    const user = await userService.getById(payload.sub);\n\n    // revoke token if user no longer exists\n    if (!user) {\n        return done(null, true);\n    }\n\n    done();\n}\n"],"file":"jwt.js"}