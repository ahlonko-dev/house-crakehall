{"version":3,"sources":["../../../src/server/algo/algo.service.js"],"names":["db","require","Arbustum","User","module","exports","getMoneyById","updateConnectionDate","id","user","findById","console","log","pseudo","now","Date","dateConnect","save","error","id_player","_id","cashes","getMoney","money","arbust","find","player_id","myTable","map","tree","push","leave","reducer","accumulator","currentValue","variable","reduce"],"mappings":";;AAGA,MAAMA,EAAE,GAAGC,OAAO,CAAC,gBAAD,CAAlB;;AACA,MAAMC,QAAQ,GAAGF,EAAE,CAACE,QAApB;AACA,MAAMC,IAAI,GAAGH,EAAE,CAACG,IAAhB;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,YADa;AAEbC,EAAAA;AAFa,CAAjB;;AAKA,eAAeA,oBAAf,CAAoCC,EAApC,EAAwC;AACpC,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,QAAL,CAAcF,EAAd,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAa,WAAUH,IAAI,CAACI,MAAO,EAAnC;AACA,UAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACAN,IAAAA,IAAI,CAACO,WAAL,GAAmBF,GAAnB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAa,UAAb;AACA,UAAMH,IAAI,CAACQ,IAAL,EAAN;AACH,GAPD,CAOE,OAAOC,KAAP,EAAc;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACH;AACJ;;AAED,eAAeZ,YAAf,CAA4BE,EAA5B,EAAgC;AAC5B,MAAI;AACA,UAAMC,IAAI,GAAG,MAAMN,IAAI,CAACO,QAAL,CAAcF,EAAd,CAAnB;AACA,UAAMW,SAAS,GAAGV,IAAI,CAACW,GAAvB;AAEA,QAAIC,MAAM,GAAG,CAAb;AACAA,IAAAA,MAAM,GAAG,MAAMC,QAAQ,CAACH,SAAD,CAAvB;AAEAV,IAAAA,IAAI,CAACc,KAAL,GAAaF,MAAb;AACA,UAAMZ,IAAI,CAACQ,IAAL,EAAN;AACA,WAAOI,MAAP;AACH,GAVD,CAUE,OAAOH,KAAP,EAAc;AACZ,WAAOA,KAAP;AACH;AACJ;;AAED,eAAeI,QAAf,CAAwBH,SAAxB,EAAmC;AAC/B,MAAI;AACA,UAAMK,MAAM,GAAG,MAAMtB,QAAQ,CAACuB,IAAT,CAAc;AAACC,MAAAA,SAAS,EAAEP;AAAZ,KAAd,CAArB;AACA,UAAMQ,OAAO,GAAG,EAAhB;AACAH,IAAAA,MAAM,CAACI,GAAP,CAAWC,IAAI,IAAI;AACfF,MAAAA,OAAO,CAACG,IAAR,CAAaD,IAAI,CAACE,KAAlB;AACH,KAFD;;AAGA,UAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KACZD,WAAW,GAAGC,YADlB;;AAEA,UAAMC,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAeJ,OAAf,CAAjB;AACA,WAAOG,QAAP;AACH,GAVD,CAUE,OAAOjB,KAAP,EAAc;AACZ,WAAOA,KAAP;AACH;AACJ","sourcesContent":["/* eslint-disable array-callback-return */\n/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\nconst db = require(\"../_helpers/db\");\nconst Arbustum = db.Arbustum;\nconst User = db.User;\n\nmodule.exports = {\n    getMoneyById,\n    updateConnectionDate,\n};\n//update connectDate\nasync function updateConnectionDate(id) {\n    try {\n        const user = await User.findById(id);\n        console.log(` user : ${user.pseudo}`);\n        const now = new Date();\n        user.dateConnect = now;\n        console.log(`connect `);\n        await user.save();\n    } catch (error) {\n        console.log(error);\n    }\n}\n//get money for current user\nasync function getMoneyById(id) {\n    try {\n        const user = await User.findById(id);\n        const id_player = user._id;\n        //console.log(\"test1\", id_player);\n        let cashes = 0;\n        cashes = await getMoney(id_player);\n\n        user.money = cashes;\n        await user.save();\n        return cashes; //facultaif\n    } catch (error) {\n        return error;\n    }\n}\n// calcul money\nasync function getMoney(id_player) {\n    try {\n        const arbust = await Arbustum.find({player_id: id_player});\n        const myTable = [];\n        arbust.map(tree => {\n            myTable.push(tree.leave);\n        });\n        const reducer = (accumulator, currentValue) =>\n            accumulator + currentValue;\n        const variable = myTable.reduce(reducer);\n        return variable;\n    } catch (error) {\n        return error;\n    }\n}\n"],"file":"algo.service.js"}