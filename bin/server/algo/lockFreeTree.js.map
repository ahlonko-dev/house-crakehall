{"version":3,"sources":["../../../src/server/algo/lockFreeTree.js"],"names":["object","require","lockFreeTree","idPlayer","getTreeToLock","allTrees","leavesFreeTree","leavesFree","treeInRadius","treeToOtherPlayers","treePrinceInRadius","treeInRadiusValiue","value","center","lat","geoloc","lon","radius","forEach","element","isTreeInRadius","insideCircle","push","leaves","free","id","removeDuplicateId","unique","i","keys","uniqueIdPlayerTree","console","log","treeLockPrice","length"],"mappings":"AAAA,MAAM;AAACA,EAAAA;AAAD,IAAWC,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,aAAX,EAA0BC,QAA1B,KAAuC;AACxD,QAAMC,cAAc,GAAGF,aAAa,CAACG,UAArC;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AACA,MAAIC,kBAAkB,GAAG,CAAzB;AACA,MAAIC,KAAJ;AAEA,QAAMC,MAAM,GAAG;AACXC,IAAAA,GAAG,EAAEV,aAAa,CAACW,MAAd,CAAqBD,GADf;AAEXE,IAAAA,GAAG,EAAEZ,aAAa,CAACW,MAAd,CAAqBC;AAFf,GAAf;AAIA,QAAMC,MAAM,GAAG,GAAf,CAZwD,CAYpC;;AAEpBZ,EAAAA,QAAQ,CAACa,OAAT,CAAkBC,OAAD,IAAa;AAC1B,UAAMC,cAAc,GAAGC,YAAY,CAC/B;AAACP,MAAAA,GAAG,EAAEK,OAAO,CAACJ,MAAR,CAAeD,GAArB;AAA0BE,MAAAA,GAAG,EAAEG,OAAO,CAACJ,MAAR,CAAeC;AAA9C,KAD+B,EAE/BH,MAF+B,EAG/BI,MAH+B,CAAnC;;AAMA,QAAIG,cAAc,KAAK,IAAvB,EAA6B;AACzBZ,MAAAA,YAAY,CAACc,IAAb,CAAkBH,OAAlB;AACAR,MAAAA,kBAAkB,GAAGA,kBAAkB,GAAGQ,OAAO,CAACI,MAAlD;AACH;AACJ,GAXD;AAaAf,EAAAA,YAAY,CAACU,OAAb,CAAsBC,OAAD,IAAa;AAC9BT,IAAAA,kBAAkB,GAAGA,kBAAkB,GAAGS,OAAO,CAACI,MAAlD;;AACA,QAAIJ,OAAO,CAACK,IAAR,KAAiB,KAAjB,IAA0BL,OAAO,CAACM,EAAR,KAAetB,QAA7C,EAAuD;AACnDM,MAAAA,kBAAkB,CAACa,IAAnB,CAAwBH,OAAxB;AACH;AACJ,GALD;;AAOA,QAAMO,iBAAiB,GAAIjB,kBAAD,IAAwB;AAC9C,QAAIkB,MAAM,GAAG,EAAb;AACAlB,IAAAA,kBAAkB,CAACS,OAAnB,CAA2B,UAAUU,CAAV,EAAa;AACpC,UAAI,CAACD,MAAM,CAACC,CAAD,CAAX,EAAgB;AACZD,QAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,IAAZ;AACH;AACJ,KAJD;AAKA,WAAO5B,MAAM,CAAC6B,IAAP,CAAYF,MAAZ,CAAP;AACH,GARD;;AAUA,QAAMG,kBAAkB,GAAGJ,iBAAiB,CAACjB,kBAAD,CAA5C;AACAsB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,kBAAZ;AAEA,QAAMsB,aAAa,GACf3B,cAAc,GAAG,EAAjB,GACAI,kBAAkB,GAAGoB,kBAAkB,CAACI,MADxC,GAEAvB,kBAAkB,GAAGmB,kBAAkB,CAACI,MAH5C;AAKAH,EAAAA,OAAO,CAACC,GAAR,CAAYC,aAAZ;AAEArB,EAAAA,KAAK,GAAGqB,aAAR;AAEA,SAAOrB,KAAP;AACH,CAzDD","sourcesContent":["const {object} = require(\"prop-types\");\n\nconst lockFreeTree = (idPlayer, getTreeToLock, allTrees) => {\n    const leavesFreeTree = getTreeToLock.leavesFree;\n    const treeInRadius = [];\n    const treeToOtherPlayers = [];\n    let treePrinceInRadius = 0;\n    let treeInRadiusValiue = 0;\n    let value;\n\n    const center = {\n        lat: getTreeToLock.geoloc.lat,\n        lon: getTreeToLock.geoloc.lon,\n    };\n    const radius = 100; // meters\n\n    allTrees.forEach((element) => {\n        const isTreeInRadius = insideCircle(\n            {lat: element.geoloc.lat, lon: element.geoloc.lon},\n            center,\n            radius,\n        );\n\n        if (isTreeInRadius === true) {\n            treeInRadius.push(element);\n            treeInRadiusValiue = treeInRadiusValiue + element.leaves;\n        }\n    });\n\n    treeInRadius.forEach((element) => {\n        treePrinceInRadius = treePrinceInRadius + element.leaves;\n        if (element.free === false && element.id !== idPlayer) {\n            treeToOtherPlayers.push(element);\n        }\n    });\n\n    const removeDuplicateId = (treeToOtherPlayers) => {\n        let unique = {};\n        treeToOtherPlayers.forEach(function (i) {\n            if (!unique[i]) {\n                unique[i] = true;\n            }\n        });\n        return object.keys(unique);\n    };\n\n    const uniqueIdPlayerTree = removeDuplicateId(treeToOtherPlayers);\n    console.log(treeInRadiusValiue);\n\n    const treeLockPrice =\n        leavesFreeTree * 10 +\n        treePrinceInRadius * uniqueIdPlayerTree.length -\n        treeInRadiusValiue / uniqueIdPlayerTree.length;\n\n    console.log(treeLockPrice);\n\n    value = treeLockPrice;\n\n    return value;\n};\n"],"file":"lockFreeTree.js"}