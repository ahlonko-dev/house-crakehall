{"version":3,"sources":["../../../src/server/algo/arbustum.model.js"],"names":["mongoose","require","Schema","schema","nom_complet","type","String","arbotag","Number","geoloc","lat","lon","hauteur_totale","diametre_cime","circonf","player_id","Types","ObjectId","player_color","leave","random_name","locked","Boolean","free","wikilink","comment","set","virtuals","versionKey","transform","doc","ret","_id","hash","module","exports","model"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGF,QAAQ,CAACE,MAAxB,C,CACA;;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW;AACtBE,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAEC;AAAP,GADS;AAEtBC,EAAAA,OAAO,EAAE;AAACF,IAAAA,IAAI,EAAEG;AAAP,GAFa;AAGtBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,GAAG,EAAE;AAACL,MAAAA,IAAI,EAAEG;AAAP,KADD;AAEJG,IAAAA,GAAG,EAAE;AAACN,MAAAA,IAAI,EAAEG;AAAP;AAFD,GAHc;AAOtBI,EAAAA,cAAc,EAAE;AAACP,IAAAA,IAAI,EAAEG;AAAP,GAPM;AAQtBK,EAAAA,aAAa,EAAE;AAACR,IAAAA,IAAI,EAAEG;AAAP,GARO;AAStBM,EAAAA,OAAO,EAAE;AAACT,IAAAA,IAAI,EAAEG;AAAP,GATa;AAUtB;AACAO,EAAAA,SAAS,EAAE;AAACV,IAAAA,IAAI,EAAEH,MAAM,CAACc,KAAP,CAAaC;AAApB,GAXW;AAYtBC,EAAAA,YAAY,EAAE;AAACb,IAAAA,IAAI,EAAEG;AAAP,GAZQ;AAatBW,EAAAA,KAAK,EAAE;AAACd,IAAAA,IAAI,EAAEG;AAAP,GAbe;AActBY,EAAAA,WAAW,EAAE;AAACf,IAAAA,IAAI,EAAEC;AAAP,GAdS;AAetBe,EAAAA,MAAM,EAAE;AAAChB,IAAAA,IAAI,EAAEiB;AAAP,GAfc;AAgBtBC,EAAAA,IAAI,EAAE;AAAClB,IAAAA,IAAI,EAAEiB;AAAP,GAhBgB;AAiBtBE,EAAAA,QAAQ,EAAE;AAACnB,IAAAA,IAAI,EAAEC;AAAP,GAjBY;AAkBtBmB,EAAAA,OAAO,EAAE;AAACpB,IAAAA,IAAI,EAAEC;AAAP;AAlBa,CAAX,CAAf;AAoBA;;;;;;;;;;;;;;;;;AAiBAH,MAAM,CAACuB,GAAP,CAAW,QAAX,EAAqB;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,UAAU,EAAE,KAFK;;AAGjBC,EAAAA,SAAS,CAACC,GAAD,EAAMC,GAAN,EAAW;AAChB,WAAOA,GAAG,CAACC,GAAX;AACA,WAAOD,GAAG,CAACE,IAAX;AACH;;AANgB,CAArB;AASAC,MAAM,CAACC,OAAP,GAAiBnC,QAAQ,CAACoC,KAAT,CAAe,UAAf,EAA2BjC,MAA3B,EAAmC,UAAnC,CAAjB","sourcesContent":["const mongoose = require(\"mongoose\");\nconst Schema = mongoose.Schema;\n//const ObjectId = Schema.Types.ObjectId;\n\nconst schema = new Schema({\n    nom_complet: {type: String},\n    arbotag: {type: Number},\n    geoloc: {\n        lat: {type: Number},\n        lon: {type: Number},\n    },\n    hauteur_totale: {type: Number},\n    diametre_cime: {type: Number},\n    circonf: {type: Number},\n    //player_id: [{type: ObjectId}],\n    player_id: {type: Schema.Types.ObjectId},\n    player_color: {type: Number},\n    leave: {type: Number},\n    random_name: {type: String},\n    locked: {type: Boolean},\n    free: {type: Boolean},\n    wikilink: {type: String},\n    comment: {type: String},\n});\n/* const schema = new Schema({\n    y_lambert72: {type: Number},\n    arbotag: {type: Number},\n    date_donnees: {type: Date},\n    x_lambda: {type: Number},\n    geoloc: {\n        lat: {type: Number},\n        lon: {type: Number},\n    },\n    hauteur_totale: {type: Number},\n    x_lambert72: {type: Number},\n    y_phi: {type: Number},\n    nom_complet: {type: String},\n    diametre_cime: {type: Number},\n    circonf: {type: Number},\n}); */\n\nschema.set(\"toJSON\", {\n    virtuals: true,\n    versionKey: false,\n    transform(doc, ret) {\n        delete ret._id;\n        delete ret.hash;\n    },\n});\n\nmodule.exports = mongoose.model(\"Arbustum\", schema, \"arbustum\");\n"],"file":"arbustum.model.js"}