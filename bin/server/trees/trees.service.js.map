{"version":3,"sources":["../../../src/server/trees/trees.service.js"],"names":["db","require","Trees","newUserFunction","otherPlayerPrice","getAllTrees","req","res","trees","find","json","error","send","response","data","message","getIdPlayer","idPlayer","params","playerTrees","player_id","getidplayer","newPlayerTreesGenerator","console","log","_id","pseudoPlayer","pseudo","colorPlayer","color","freeTrees","free","buyOtherPlayerTree","allTrees","idTree","getTree","findById","treeid","playerId","playerid","lockFreeTree","getidtree","getTreeToLock","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable no-console */\nconst db = require(\"../_helpers/db\");\nconst Trees = db.Trees;\n//const User = db.User;\nconst newUserFunction = require(\"../algo/getfreetrees\");\nconst otherPlayerPrice = require(\"../otherplayerprice\");\n//const userService = require(\"../users/user.service\");\n\n//const {createIndexes} = require(\"./trees.model\");\n\n// Récupération de l'ensemble des arbres\nasync function getAllTrees(req, res) {\n    try {\n        const trees = await Trees.find();\n        // console.log(trees);\n        res.json(trees);\n    } catch (error) {\n        res.send(error.response.data.message);\n    }\n}\n/* async function getCurrent(req, res) {\n    const momo = await current.getCurrent();\n    res.json(momo);\n} */\n\n// Recupération de l'id d'un joueur et envois des arbres correspondant\nasync function getIdPlayer(req, res) {\n    try {\n        const idPlayer = await req.params;\n\n        const playerTrees = await Trees.find({player_id: idPlayer.getidplayer});\n        res.json(playerTrees);\n    } catch (error) {\n        res.send(error);\n    }\n}\n\nasync function newPlayerTreesGenerator(req, res) {\n    console.log(\"============newPlayerTreesGenerator=======\");\n    const idPlayer = req._id;\n    const pseudoPlayer = req.pseudo;\n    const colorPlayer = req.color;\n    console.log(idPlayer, pseudoPlayer, colorPlayer);\n\n    try {\n        const freeTrees = await Trees.find({free: true});\n\n        newUserFunction(idPlayer, freeTrees, pseudoPlayer, colorPlayer);\n    } catch (error) {\n        res.send(error);\n    }\n}\n// lat: 5ece7015b467be4c63b04e4a\nasync function buyOtherPlayerTree(req, res) {\n    try {\n        const allTrees = await Trees.find();\n        const idTree = await req.params;\n\n        const getTree = await Trees.findById(idTree.treeid);\n        const playerId = await idTree.playerid;\n\n        otherPlayerPrice(getTree, allTrees, playerId);\n    } catch (error) {\n        res.send(error);\n    }\n}\n\nasync function lockFreeTree(req, res) {\n    try {\n        const idPlayer = await req.params.getidplayer;\n        const idTree = await req.params.getidtree;\n\n        const getTreeToLock = await Trees.findById(idTree.idTree);\n        const allTrees = await Trees.find();\n        lockFreeTree(idPlayer, getTreeToLock, allTrees);\n    } catch (error) {\n        res.send(error);\n    }\n}\n\nmodule.exports = {\n    getAllTrees,\n    getIdPlayer,\n    newPlayerTreesGenerator,\n    buyOtherPlayerTree,\n    lockFreeTree,\n};\n"],"file":"trees.service.js"}